(* Module for axiomatizing type "integer_16" defined at interfac.ads:50, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_16
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type integer_16  = <range -32768 32767>
  
  function   first () requires { True } ensures  { True } returns
    int = -32768
  
  function   last () requires { True } ensures  { True } returns int = 32767
  
  function [GP_Inline]  in_range (x : int) requires { True } ensures 
    { True } returns
     = (([GP_Pretty_Ada:-1] (first <= x)) /\ ([GP_Pretty_Ada:-2] (x <= last)))
  
  clone export ada__model.Static_Discrete with axiom . type t = integer_16,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type integer_16__ref  = { mutable integer_16__content : integer_16 }
  
  function   integer_16__ref_integer_16__content__2__projection
    (a : integer_16__ref) requires {  } ensures  {  } returns
    integer_16 = a.integer_16__content
  
  meta model_projection function integer_16__ref_integer_16__content__2__projection
  
  meta inline:no function integer_16__ref_integer_16__content__2__projection
  
  function   integer_16__havoc (x : integer_16__ref) requires {  } ensures 
    {  } returns unit

end

(* Module defining to_rep/of_rep for type "integer_16" defined at interfac.ads:50, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__integer_16__rep
  
  use        Interfaces__integer_16
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Interfaces__integer_16.integer_16) requires { True }
    ensures  { True } returns int = (Interfaces__integer_16.integer_16'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Interfaces__integer_16.integer_16,
    predicate in_range = Interfaces__integer_16.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the array theory associated to type "Thistory_tB" defined at qoaconv.ads:14, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Interfaces__integer_16
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Interfaces__integer_16
  use        Interfaces__integer_16__rep
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = Interfaces__integer_16.integer_16
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              ( forall ([mlw:proxy_symbol] [introduced] temp___idx_168) : int
              [].(if
                 ((a__first <= ([mlw:proxy_symbol]
                     [introduced] temp___idx_168)) /\
                    (([mlw:proxy_symbol] [introduced] temp___idx_168)
                       <= a__last))
                 then
                 ((Interfaces__integer_16__rep.to_rep
                     (get a ([mlw:proxy_symbol] [introduced] temp___idx_168)))
                    = (Interfaces__integer_16__rep.to_rep
                         (get b
                            ((b__first - a__first) + ([mlw:proxy_symbol]
                               [introduced] temp___idx_168)))))
                 )))
  
  axiom bool_eq_rev (function bool_eq) : ( forall a b : map
                                         [].( forall a__first a__last
                                            b__first b__last : int
                                            [].(((bool_eq b b__first b__last
                                                    a a__first a__last)
                                                   = True) ->
                                                  ((if (a__first <= a__last)
                                                   then
                                                   ((b__first <= b__last) /\
                                                      ((a__last - a__first)
                                                         = (b__last
                                                              - b__first)))
                                                    else (b__first > b__last))
                                                     /\
                                                     ( forall
                                                     ([mlw:proxy_symbol]
                                                     [introduced] temp___idx_168)
                                                     : int
                                                     [].(if
                                                        ((a__first
                                                            <= ([mlw:proxy_symbol]
                                                            [introduced] temp___idx_168))
                                                           /\
                                                           (([mlw:proxy_symbol]
                                                              [introduced] temp___idx_168)
                                                              <= a__last))
                                                        then
                                                        ((Interfaces__integer_16__rep.to_rep
                                                            (get a
                                                               ([mlw:proxy_symbol]
                                                               [introduced] temp___idx_168)))
                                                           = (Interfaces__integer_16__rep.to_rep
                                                                (get b
                                                                   ((b__first
                                                                    - a__first)
                                                                    + ([mlw:proxy_symbol]
                                                                    [introduced] temp___idx_168)))))
                                                        ))))))

end

(* Module for axiomatizing type "history_t" defined at qoaconv.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Qoaconv__history_t
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  
  type component_type  = Interfaces__integer_16.integer_16
  
  function   first () requires {  } ensures  {  } returns int = 0
  
  function   last () requires {  } ensures  {  } returns int = 3
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Interfaces__integer_16.map,
    function array_bool_eq = Array__Int__Interfaces__integer_16.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing type "weights_t" defined at qoaconv.ads:15, created in Gnat2Why.Types.Translate_Type *)
module Qoaconv__weights_t
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  
  type component_type  = Interfaces__integer_16.integer_16
  
  function   first () requires {  } ensures  {  } returns int = 0
  
  function   last () requires {  } ensures  {  } returns int = 3
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Interfaces__integer_16.map,
    function array_bool_eq = Array__Int__Interfaces__integer_16.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing the record theory associated to type "qoa_lms_t" defined at qoaconv.ads:21, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Qoaconv__qoa_lms_t__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Qoaconv__history_t
  use        Qoaconv__weights_t
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  
  type __split_fields  = { [model_trace:.3213]
                           [name:History]rec__qoaconv__qoa_lms_t__history : Array__Int__Interfaces__integer_16.map;
                           [model_trace:.3222]
                           [name:Weight]rec__qoaconv__qoa_lms_t__weight : Array__Int__Interfaces__integer_16.map }
  
  function [model_trace:.3213] [name:History] 
    __split_fields_rec__qoaconv__qoa_lms_t__history__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Interfaces__integer_16.map = a.rec__qoaconv__qoa_lms_t__history
  
  meta model_projection function __split_fields_rec__qoaconv__qoa_lms_t__history__projection
  
  meta inline:no function __split_fields_rec__qoaconv__qoa_lms_t__history__projection
  
  function [model_trace:.3222] [name:Weight] 
    __split_fields_rec__qoaconv__qoa_lms_t__weight__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Interfaces__integer_16.map = a.rec__qoaconv__qoa_lms_t__weight
  
  meta model_projection function __split_fields_rec__qoaconv__qoa_lms_t__weight__projection
  
  meta inline:no function __split_fields_rec__qoaconv__qoa_lms_t__weight__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__projection
  
  meta inline:no function __rep___split_fields__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   qoaconv__qoa_lms_t__history__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__qoaconv__qoa_lms_t__history_ (a : __rep) requires
    { (qoaconv__qoa_lms_t__history__pred a) } ensures 
    { (result = a.__split_fields.rec__qoaconv__qoa_lms_t__history) } returns
    Array__Int__Interfaces__integer_16.map
  
  function   qoaconv__qoa_lms_t__weight__pred (a : __rep) requires { True }
    ensures  { True } returns  = True
  
  function   rec__qoaconv__qoa_lms_t__weight_ (a : __rep) requires
    { (qoaconv__qoa_lms_t__weight__pred a) } ensures 
    { (result = a.__split_fields.rec__qoaconv__qoa_lms_t__weight) } returns
    Array__Int__Interfaces__integer_16.map
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (True /\
              (Qoaconv__history_t.bool_eq
                 a.__split_fields.rec__qoaconv__qoa_lms_t__history
                 b.__split_fields.rec__qoaconv__qoa_lms_t__history) /\
              (Qoaconv__weights_t.bool_eq
                 a.__split_fields.rec__qoaconv__qoa_lms_t__weight
                 b.__split_fields.rec__qoaconv__qoa_lms_t__weight))
           then True  else False)

end

(* Module for axiomatizing type "qoa_lms_t" defined at qoaconv.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Qoaconv__qoa_lms_t
  
  use export Qoaconv__qoa_lms_t__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Qoaconv__qoa_lms_t__rep
  
  type qoa_lms_t  = __rep
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom (function value__size) : ((value__size ) >= 0)
  
  axiom object__size_axiom (function object__size) : ((object__size ) >= 0)
  
  axiom alignment_axiom (function alignment) : ((alignment ) >= 0)
  
  function   qoaconv__qoa_lms_t__history__first__bit () requires {  }
    ensures  {  } returns int
  
  function   qoaconv__qoa_lms_t__history__last__bit () requires {  } ensures 
    {  } returns int
  
  function   qoaconv__qoa_lms_t__history__position () requires {  } ensures 
    {  } returns int
  
  axiom qoaconv__qoa_lms_t__history__first__bit_axiom (function qoaconv__qoa_lms_t__history__first__bit) : 
  ((qoaconv__qoa_lms_t__history__first__bit ) >= 0)
  
  axiom qoaconv__qoa_lms_t__history__last__bit_axiom (function qoaconv__qoa_lms_t__history__last__bit) : 
  ((qoaconv__qoa_lms_t__history__last__bit )
     > (qoaconv__qoa_lms_t__history__first__bit ))
  
  axiom qoaconv__qoa_lms_t__history__position_axiom (function qoaconv__qoa_lms_t__history__position) : 
  ((qoaconv__qoa_lms_t__history__position ) >= 0)
  
  function   qoaconv__qoa_lms_t__weight__first__bit () requires {  } ensures 
    {  } returns int
  
  function   qoaconv__qoa_lms_t__weight__last__bit () requires {  } ensures 
    {  } returns int
  
  function   qoaconv__qoa_lms_t__weight__position () requires {  } ensures 
    {  } returns int
  
  axiom qoaconv__qoa_lms_t__weight__first__bit_axiom (function qoaconv__qoa_lms_t__weight__first__bit) : 
  ((qoaconv__qoa_lms_t__weight__first__bit ) >= 0)
  
  axiom qoaconv__qoa_lms_t__weight__last__bit_axiom (function qoaconv__qoa_lms_t__weight__last__bit) : 
  ((qoaconv__qoa_lms_t__weight__last__bit )
     > (qoaconv__qoa_lms_t__weight__first__bit ))
  
  axiom qoaconv__qoa_lms_t__weight__position_axiom (function qoaconv__qoa_lms_t__weight__position) : 
  ((qoaconv__qoa_lms_t__weight__position ) >= 0)
  
  function   dummy () requires {  } ensures  {  } returns qoa_lms_t
  
  type qoa_lms_t__ref  = { mutable qoa_lms_t__content : qoa_lms_t }
  
  function   qoa_lms_t__ref_qoa_lms_t__content__projection
    (a : qoa_lms_t__ref) requires {  } ensures  {  } returns
    qoa_lms_t = a.qoa_lms_t__content
  
  meta model_projection function qoa_lms_t__ref_qoa_lms_t__content__projection
  
  meta inline:no function qoa_lms_t__ref_qoa_lms_t__content__projection
  
  function   qoa_lms_t__havoc (x : qoa_lms_t__ref) requires {  } ensures 
    {  } returns unit

end

(* Module for axiomatizing the array theory associated to type "Tlms_tB" defined at qoaconv.ads:26, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Qoaconv__qoa_lms_t
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Qoaconv__qoa_lms_t
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = Qoaconv__qoa_lms_t.qoa_lms_t
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              ( forall ([mlw:proxy_symbol] [introduced] temp___idx_169) : int
              [].(if
                 ((a__first <= ([mlw:proxy_symbol]
                     [introduced] temp___idx_169)) /\
                    (([mlw:proxy_symbol] [introduced] temp___idx_169)
                       <= a__last))
                 then
                 (Qoaconv__qoa_lms_t.bool_eq
                    (get a ([mlw:proxy_symbol] [introduced] temp___idx_169))
                    (get b
                       ((b__first - a__first) + ([mlw:proxy_symbol]
                          [introduced] temp___idx_169))))
                 )))
  
  axiom bool_eq_rev (function bool_eq) : ( forall a b : map
                                         [].( forall a__first a__last
                                            b__first b__last : int
                                            [].(((bool_eq b b__first b__last
                                                    a a__first a__last)
                                                   = True) ->
                                                  ((if (a__first <= a__last)
                                                   then
                                                   ((b__first <= b__last) /\
                                                      ((a__last - a__first)
                                                         = (b__last
                                                              - b__first)))
                                                    else (b__first > b__last))
                                                     /\
                                                     ( forall
                                                     ([mlw:proxy_symbol]
                                                     [introduced] temp___idx_169)
                                                     : int
                                                     [].(if
                                                        ((a__first
                                                            <= ([mlw:proxy_symbol]
                                                            [introduced] temp___idx_169))
                                                           /\
                                                           (([mlw:proxy_symbol]
                                                              [introduced] temp___idx_169)
                                                              <= a__last))
                                                        then
                                                        (Qoaconv__qoa_lms_t.bool_eq
                                                           (get a
                                                              ([mlw:proxy_symbol]
                                                              [introduced] temp___idx_169))
                                                           (get b
                                                              ((b__first
                                                                  - a__first)
                                                                 + ([mlw:proxy_symbol]
                                                                 [introduced] temp___idx_169))))
                                                        ))))))

end

(* Module for axiomatizing type "lms_t" defined at qoaconv.ads:26, created in Gnat2Why.Types.Translate_Type *)
module Qoaconv__lms_t
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Qoaconv__qoa_lms_t
  use        Array__Int__Qoaconv__qoa_lms_t
  
  type component_type  = Qoaconv__qoa_lms_t.qoa_lms_t
  
  function   first () requires {  } ensures  {  } returns int = 0
  
  function   last () requires {  } ensures  {  } returns int = 7
  
  clone export ada__model.Constr_Array with axiom . type map = Array__Int__Qoaconv__qoa_lms_t.map,
    function array_bool_eq = Array__Int__Qoaconv__qoa_lms_t.bool_eq,
    function first = first, function last = last, type index_rep_type = int

end

(* Module for axiomatizing type "unsigned_32" defined at interfac.ads:80, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_32
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.BV32
  
  type unsigned_32  
  
  function   attr__ATTRIBUTE_MODULUS () requires {  } ensures  {  } returns
    _gnatprove_standard.BV32.t
  
  function   first () requires { True } ensures  { True } returns
    _gnatprove_standard.BV32.t = 0
  
  function   last () requires { True } ensures  { True } returns
    _gnatprove_standard.BV32.t = 4294967295
  
  function   first_int () requires {  } ensures  {  } returns int = 0
  
  function   last_int () requires {  } ensures  {  } returns int = 4294967295
  
  function   in_range (x : _gnatprove_standard.BV32.t) requires { True }
    ensures  { True } returns  = True
  
  function   in_range_int (x : int) requires { True } ensures  { True }
    returns  = _gnatprove_standard.BV32.uint_in_range x
  
  clone export ada__model.Static_Modular_32 with axiom . type t = unsigned_32,
    function first = first, function last = last,
    predicate in_range = in_range, predicate in_range_int = in_range_int
  
  type unsigned_32__ref  = { mutable unsigned_32__content : unsigned_32 }
  
  function   unsigned_32__ref_unsigned_32__content__projection
    (a : unsigned_32__ref) requires {  } ensures  {  } returns
    unsigned_32 = a.unsigned_32__content
  
  meta model_projection function unsigned_32__ref_unsigned_32__content__projection
  
  meta inline:no function unsigned_32__ref_unsigned_32__content__projection
  
  function   unsigned_32__havoc (x : unsigned_32__ref) requires {  } ensures 
    {  } returns unit

end

(* Module defining to_rep/of_rep for type "unsigned_32" defined at interfac.ads:80, created in Gnat2Why.Types.Translate_Type *)
module Interfaces__unsigned_32__rep
  
  use        Interfaces__unsigned_32
  use        _gnatprove_standard.BV32
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_BV32 with axiom . type t = Interfaces__unsigned_32.unsigned_32,
    predicate in_range = Interfaces__unsigned_32.in_range,
    predicate in_range_int = Interfaces__unsigned_32.in_range_int
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the record theory associated to type "qoa_description" defined at qoaconv.ads:28, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Qoaconv__qoa_description__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.BV32
  use        Qoaconv__lms_t
  use        Interfaces__unsigned_32
  use        Interfaces__unsigned_32__rep
  use        Array__Int__Qoaconv__qoa_lms_t
  use        Array__Int__Qoaconv__qoa_lms_t
  use        Array__Int__Qoaconv__qoa_lms_t
  use        Array__Int__Qoaconv__qoa_lms_t
  
  type __split_fields  = { [name:Channels]
                           [model_trace:.3244]rec__qoaconv__qoa_description__channels : Interfaces__unsigned_32.unsigned_32;
                           [model_trace:.3249]
                           [name:Samplerate]rec__qoaconv__qoa_description__samplerate : Interfaces__unsigned_32.unsigned_32;
                           [model_trace:.3253]
                           [name:Samples]rec__qoaconv__qoa_description__samples : Interfaces__unsigned_32.unsigned_32;
                           [model_trace:.3257]
                           [name:lms]rec__qoaconv__qoa_description__lms : Array__Int__Qoaconv__qoa_lms_t.map }
  
  function [name:Channels] [model_trace:.3244] 
    __split_fields_rec__qoaconv__qoa_description__channels__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Interfaces__unsigned_32.unsigned_32 = a.rec__qoaconv__qoa_description__channels
  
  meta model_projection function __split_fields_rec__qoaconv__qoa_description__channels__projection
  
  meta inline:no function __split_fields_rec__qoaconv__qoa_description__channels__projection
  
  function [model_trace:.3249] [name:Samplerate] 
    __split_fields_rec__qoaconv__qoa_description__samplerate__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Interfaces__unsigned_32.unsigned_32 = a.rec__qoaconv__qoa_description__samplerate
  
  meta model_projection function __split_fields_rec__qoaconv__qoa_description__samplerate__projection
  
  meta inline:no function __split_fields_rec__qoaconv__qoa_description__samplerate__projection
  
  function [model_trace:.3253] [name:Samples] 
    __split_fields_rec__qoaconv__qoa_description__samples__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Interfaces__unsigned_32.unsigned_32 = a.rec__qoaconv__qoa_description__samples
  
  meta model_projection function __split_fields_rec__qoaconv__qoa_description__samples__projection
  
  meta inline:no function __split_fields_rec__qoaconv__qoa_description__samples__projection
  
  function [model_trace:.3257] [name:lms] 
    __split_fields_rec__qoaconv__qoa_description__lms__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    Array__Int__Qoaconv__qoa_lms_t.map = a.rec__qoaconv__qoa_description__lms
  
  meta model_projection function __split_fields_rec__qoaconv__qoa_description__lms__projection
  
  meta inline:no function __split_fields_rec__qoaconv__qoa_description__lms__projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__2__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__2__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__2__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields }
  
  function   __rep___split_fields__2__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__2__projection
  
  meta inline:no function __rep___split_fields__2__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   qoaconv__qoa_description__channels__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__qoaconv__qoa_description__channels_ (a : __rep) requires
    { (qoaconv__qoa_description__channels__pred a) } ensures 
    { (result = a.__split_fields.rec__qoaconv__qoa_description__channels) }
    returns Interfaces__unsigned_32.unsigned_32
  
  function   qoaconv__qoa_description__samplerate__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__qoaconv__qoa_description__samplerate_ (a : __rep) requires
    { (qoaconv__qoa_description__samplerate__pred a) } ensures 
    { (result = a.__split_fields.rec__qoaconv__qoa_description__samplerate) }
    returns Interfaces__unsigned_32.unsigned_32
  
  function   qoaconv__qoa_description__samples__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__qoaconv__qoa_description__samples_ (a : __rep) requires
    { (qoaconv__qoa_description__samples__pred a) } ensures 
    { (result = a.__split_fields.rec__qoaconv__qoa_description__samples) }
    returns Interfaces__unsigned_32.unsigned_32
  
  function   qoaconv__qoa_description__lms__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__qoaconv__qoa_description__lms_ (a : __rep) requires
    { (qoaconv__qoa_description__lms__pred a) } ensures 
    { (result = a.__split_fields.rec__qoaconv__qoa_description__lms) }
    returns Array__Int__Qoaconv__qoa_lms_t.map
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (True /\
              ((Interfaces__unsigned_32__rep.to_rep
                  a.__split_fields.rec__qoaconv__qoa_description__channels)
                 = (Interfaces__unsigned_32__rep.to_rep
                      b.__split_fields.rec__qoaconv__qoa_description__channels))
              /\
              ((Interfaces__unsigned_32__rep.to_rep
                  a.__split_fields.rec__qoaconv__qoa_description__samplerate)
                 = (Interfaces__unsigned_32__rep.to_rep
                      b.__split_fields.rec__qoaconv__qoa_description__samplerate))
              /\
              ((Interfaces__unsigned_32__rep.to_rep
                  a.__split_fields.rec__qoaconv__qoa_description__samples)
                 = (Interfaces__unsigned_32__rep.to_rep
                      b.__split_fields.rec__qoaconv__qoa_description__samples))
              /\
              (Qoaconv__lms_t.bool_eq
                 a.__split_fields.rec__qoaconv__qoa_description__lms
                 b.__split_fields.rec__qoaconv__qoa_description__lms))
           then True  else False)

end

(* Module for axiomatizing type "qoa_description" defined at qoaconv.ads:28, created in Gnat2Why.Types.Translate_Type *)
module Qoaconv__qoa_description
  
  use export Qoaconv__qoa_description__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Qoaconv__qoa_description__rep
  
  type qoa_description  = __rep
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom (function value__size) : ((value__size ) >= 0)
  
  axiom object__size_axiom (function object__size) : ((object__size ) >= 0)
  
  axiom alignment_axiom (function alignment) : ((alignment ) >= 0)
  
  function   qoaconv__qoa_description__channels__first__bit () requires {  }
    ensures  {  } returns int
  
  function   qoaconv__qoa_description__channels__last__bit () requires {  }
    ensures  {  } returns int
  
  function   qoaconv__qoa_description__channels__position () requires {  }
    ensures  {  } returns int
  
  axiom qoaconv__qoa_description__channels__first__bit_axiom (function qoaconv__qoa_description__channels__first__bit) : 
  ((qoaconv__qoa_description__channels__first__bit ) >= 0)
  
  axiom qoaconv__qoa_description__channels__last__bit_axiom (function qoaconv__qoa_description__channels__last__bit) : 
  ((qoaconv__qoa_description__channels__last__bit )
     > (qoaconv__qoa_description__channels__first__bit ))
  
  axiom qoaconv__qoa_description__channels__position_axiom (function qoaconv__qoa_description__channels__position) : 
  ((qoaconv__qoa_description__channels__position ) >= 0)
  
  function   qoaconv__qoa_description__samplerate__first__bit () requires
    {  } ensures  {  } returns int
  
  function   qoaconv__qoa_description__samplerate__last__bit () requires {  }
    ensures  {  } returns int
  
  function   qoaconv__qoa_description__samplerate__position () requires {  }
    ensures  {  } returns int
  
  axiom qoaconv__qoa_description__samplerate__first__bit_axiom (function qoaconv__qoa_description__samplerate__first__bit) : 
  ((qoaconv__qoa_description__samplerate__first__bit ) >= 0)
  
  axiom qoaconv__qoa_description__samplerate__last__bit_axiom (function qoaconv__qoa_description__samplerate__last__bit) : 
  ((qoaconv__qoa_description__samplerate__last__bit )
     > (qoaconv__qoa_description__samplerate__first__bit ))
  
  axiom qoaconv__qoa_description__samplerate__position_axiom (function qoaconv__qoa_description__samplerate__position) : 
  ((qoaconv__qoa_description__samplerate__position ) >= 0)
  
  function   qoaconv__qoa_description__samples__first__bit () requires {  }
    ensures  {  } returns int
  
  function   qoaconv__qoa_description__samples__last__bit () requires {  }
    ensures  {  } returns int
  
  function   qoaconv__qoa_description__samples__position () requires {  }
    ensures  {  } returns int
  
  axiom qoaconv__qoa_description__samples__first__bit_axiom (function qoaconv__qoa_description__samples__first__bit) : 
  ((qoaconv__qoa_description__samples__first__bit ) >= 0)
  
  axiom qoaconv__qoa_description__samples__last__bit_axiom (function qoaconv__qoa_description__samples__last__bit) : 
  ((qoaconv__qoa_description__samples__last__bit )
     > (qoaconv__qoa_description__samples__first__bit ))
  
  axiom qoaconv__qoa_description__samples__position_axiom (function qoaconv__qoa_description__samples__position) : 
  ((qoaconv__qoa_description__samples__position ) >= 0)
  
  function   qoaconv__qoa_description__lms__first__bit () requires {  }
    ensures  {  } returns int
  
  function   qoaconv__qoa_description__lms__last__bit () requires {  }
    ensures  {  } returns int
  
  function   qoaconv__qoa_description__lms__position () requires {  }
    ensures  {  } returns int
  
  axiom qoaconv__qoa_description__lms__first__bit_axiom (function qoaconv__qoa_description__lms__first__bit) : 
  ((qoaconv__qoa_description__lms__first__bit ) >= 0)
  
  axiom qoaconv__qoa_description__lms__last__bit_axiom (function qoaconv__qoa_description__lms__last__bit) : 
  ((qoaconv__qoa_description__lms__last__bit )
     > (qoaconv__qoa_description__lms__first__bit ))
  
  axiom qoaconv__qoa_description__lms__position_axiom (function qoaconv__qoa_description__lms__position) : 
  ((qoaconv__qoa_description__lms__position ) >= 0)
  
  function   dummy () requires {  } ensures  {  } returns qoa_description
  
  type qoa_description__ref  = { mutable qoa_description__content : qoa_description }
  
  function   qoa_description__ref_qoa_description__content__projection
    (a : qoa_description__ref) requires {  } ensures  {  } returns
    qoa_description = a.qoa_description__content
  
  meta model_projection function qoa_description__ref_qoa_description__content__projection
  
  meta inline:no function qoa_description__ref_qoa_description__content__projection
  
  function   qoa_description__havoc (x : qoa_description__ref) requires {  }
    ensures  {  } returns unit

end

(* Module for defining the constant "qoa_desc" defined at qoaconv.ads:71, created in Gnat2Why.Decls.Translate_Constant *)
module Qoaconv__qoa_encode_header__qoa_desc
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Qoaconv__qoa_description
  
  function [model_projected] [model_trace:3569] [name:Qoa_Desc]
    [sloc:qoaconv.ads:71] qoa_desc () requires {  } ensures  {  } returns
    Qoaconv__qoa_description.qoa_description

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type integer  = <range -2147483648 2147483647>
  
  function   first () requires { True } ensures  { True } returns
    int = -2147483648
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function [GP_Inline]  in_range (x : int) requires { True } ensures 
    { True } returns
     = (([GP_Pretty_Ada:-1] (first <= x)) /\ ([GP_Pretty_Ada:-2] (x <= last)))
  
  clone export ada__model.Static_Discrete with axiom . type t = integer,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type integer__ref  = { mutable integer__content : integer }
  
  function   integer__ref_integer__content__projection (a : integer__ref)
    requires {  } ensures  {  } returns integer = a.integer__content
  
  meta model_projection function integer__ref_integer__content__projection
  
  meta inline:no function integer__ref_integer__content__projection
  
  function   integer__havoc (x : integer__ref) requires {  } ensures  {  }
    returns unit

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type natural  = <range 0 2147483647>
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns
    int = 2147483647
  
  function [GP_Inline]  in_range (x : int) requires { True } ensures 
    { True } returns
     = (([GP_Pretty_Ada:-1] (first <= x)) /\ ([GP_Pretty_Ada:-2] (x <= last)))
  
  clone export ada__model.Static_Discrete with axiom . type t = natural,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type natural__ref  = { mutable natural__content : natural }
  
  function   natural__ref_natural__content__projection (a : natural__ref)
    requires {  } ensures  {  } returns natural = a.natural__content
  
  meta model_projection function natural__ref_natural__content__projection
  
  meta inline:no function natural__ref_natural__content__projection
  
  function   natural__havoc (x : natural__ref) requires {  } ensures  {  }
    returns unit

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
  
  use        Standard__integer
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : Standard__integer.integer) requires { True }
    ensures  { True } returns int = (Standard__integer.integer'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = Standard__integer.integer,
    predicate in_range = Standard__integer.in_range, function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "unsigned_char" defined at qoaconv.ads:35, created in Gnat2Why.Types.Translate_Type *)
module Qoaconv__unsigned_char
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.BV8
  
  type unsigned_char  
  
  function   attr__ATTRIBUTE_MODULUS () requires {  } ensures  {  } returns
    _gnatprove_standard.BV8.t
  
  function   first () requires { True } ensures  { True } returns
    _gnatprove_standard.BV8.t = 0
  
  function   last () requires { True } ensures  { True } returns
    _gnatprove_standard.BV8.t = 255
  
  function   first_int () requires {  } ensures  {  } returns int = 0
  
  function   last_int () requires {  } ensures  {  } returns int = 255
  
  function   in_range (x : _gnatprove_standard.BV8.t) requires { True }
    ensures  { True } returns  = True
  
  function   in_range_int (x : int) requires { True } ensures  { True }
    returns  = _gnatprove_standard.BV8.uint_in_range x
  
  clone export ada__model.Static_Modular_8 with axiom . type t = unsigned_char,
    function first = first, function last = last,
    predicate in_range = in_range, predicate in_range_int = in_range_int
  
  type unsigned_char__ref  = { mutable unsigned_char__content : unsigned_char }
  
  function   unsigned_char__ref_unsigned_char__content__projection
    (a : unsigned_char__ref) requires {  } ensures  {  } returns
    unsigned_char = a.unsigned_char__content
  
  meta model_projection function unsigned_char__ref_unsigned_char__content__projection
  
  meta inline:no function unsigned_char__ref_unsigned_char__content__projection
  
  function   unsigned_char__havoc (x : unsigned_char__ref) requires {  }
    ensures  {  } returns unit

end

(* Module defining to_rep/of_rep for type "unsigned_char" defined at qoaconv.ads:35, created in Gnat2Why.Types.Translate_Type *)
module Qoaconv__unsigned_char__rep
  
  use        Qoaconv__unsigned_char
  use        _gnatprove_standard.BV8
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_BV8 with axiom . type t = Qoaconv__unsigned_char.unsigned_char,
    predicate in_range = Qoaconv__unsigned_char.in_range,
    predicate in_range_int = Qoaconv__unsigned_char.in_range_int
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the array theory associated to type "bytes_char" defined at qoaconv.ads:36, created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Qoaconv__unsigned_char
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.BV8
  use        Qoaconv__unsigned_char
  use        Qoaconv__unsigned_char__rep
  
  function   index_I1_one () requires { True } ensures  { True } returns
    int = 1
  
  type component_type  = Qoaconv__unsigned_char.unsigned_char
  
  clone export _gnatprove_standard.Array__1 with axiom . type I1.t = int,
    predicate I1.le = <=, predicate I1.lt = <, predicate I1.gt = >,
    function I1.add = +, function I1.sub = -, function I1.one = index_I1_one,
    type component_type = component_type
  
  function   bool_eq
    (a : map a__first : int a__last : int b : map b__first : int
    b__last : int) requires { True } ensures  { True } returns
    bool = ((if (a__first <= a__last) then
            ((b__first <= b__last) /\
               ((a__last - a__first) = (b__last - b__first)))
             else (b__first > b__last)) /\
              ( forall ([mlw:proxy_symbol] [introduced] temp___idx_170) : int
              [].(if
                 ((a__first <= ([mlw:proxy_symbol]
                     [introduced] temp___idx_170)) /\
                    (([mlw:proxy_symbol] [introduced] temp___idx_170)
                       <= a__last))
                 then
                 ((Qoaconv__unsigned_char__rep.to_rep
                     (get a ([mlw:proxy_symbol] [introduced] temp___idx_170)))
                    = (Qoaconv__unsigned_char__rep.to_rep
                         (get b
                            ((b__first - a__first) + ([mlw:proxy_symbol]
                               [introduced] temp___idx_170)))))
                 )))
  
  axiom bool_eq_rev (function bool_eq) : ( forall a b : map
                                         [].( forall a__first a__last
                                            b__first b__last : int
                                            [].(((bool_eq b b__first b__last
                                                    a a__first a__last)
                                                   = True) ->
                                                  ((if (a__first <= a__last)
                                                   then
                                                   ((b__first <= b__last) /\
                                                      ((a__last - a__first)
                                                         = (b__last
                                                              - b__first)))
                                                    else (b__first > b__last))
                                                     /\
                                                     ( forall
                                                     ([mlw:proxy_symbol]
                                                     [introduced] temp___idx_170)
                                                     : int
                                                     [].(if
                                                        ((a__first
                                                            <= ([mlw:proxy_symbol]
                                                            [introduced] temp___idx_170))
                                                           /\
                                                           (([mlw:proxy_symbol]
                                                              [introduced] temp___idx_170)
                                                              <= a__last))
                                                        then
                                                        ((Qoaconv__unsigned_char__rep.to_rep
                                                            (get a
                                                               ([mlw:proxy_symbol]
                                                               [introduced] temp___idx_170)))
                                                           = (Qoaconv__unsigned_char__rep.to_rep
                                                                (get b
                                                                   ((b__first
                                                                    - a__first)
                                                                    + ([mlw:proxy_symbol]
                                                                    [introduced] temp___idx_170)))))
                                                        ))))))

end

(* Module for axiomatizing type "bytes_char" defined at qoaconv.ads:36, created in Gnat2Why.Types.Translate_Type *)
module Qoaconv__bytes_char
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        Standard__integer
  use        Standard__natural
  use        Standard__integer__rep
  use        Qoaconv__unsigned_char
  use        Array__Int__Qoaconv__unsigned_char
  
  type component_type  = Qoaconv__unsigned_char.unsigned_char
  
  function   index_1_id (x : int) requires { True } ensures  { True } returns
    int = x
  
  clone export ada__model.Unconstr_Array with axiom . type map = Array__Int__Qoaconv__unsigned_char.map,
    function array_bool_eq = Array__Int__Qoaconv__unsigned_char.bool_eq,
    type index_base_type = Standard__integer.integer,
    type index_rep_type = int,
    function to_rep = Standard__integer__rep.to_rep,
    function rep_to_int = index_1_id,
    predicate in_range_base = Standard__integer.in_range,
    predicate index_dynamic_property = Standard__natural.dynamic_property,
    predicate index_rep_le = <=
  
  type bytes_char  = __t
  
  meta model_projection function to_array
  
  meta inline:no function to_array
  
  meta model_projection function first
  
  meta inline:no function first
  
  meta model_projection function last
  
  meta inline:no function last
  
  type bytes_char__ref  = { mutable bytes_char__content : bytes_char }
  
  function   bytes_char__ref_bytes_char__content__projection
    (a : bytes_char__ref) requires {  } ensures  {  } returns
    bytes_char = a.bytes_char__content
  
  meta model_projection function bytes_char__ref_bytes_char__content__projection
  
  meta inline:no function bytes_char__ref_bytes_char__content__projection
  
  function   bytes_char__havoc (x : bytes_char__ref) requires {  } ensures 
    {  } returns unit

end

(* Module for defining a ref holding the value of variable "bytes" defined at qoaconv.ads:71, created in Gnat2Why.Decls.Translate_Variable *)
module Qoaconv__qoa_encode_header__bytes
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Qoaconv__bytes_char
  
  val bytes__pointer_value [model_projected] [name:Bytes]
  [model_trace:3572'All] [sloc:qoaconv.ads:71]: Qoaconv__bytes_char.bytes_char
  
  val bytes__is_null_pointer [model_trace:3572'Is_Null] [model_projected]
  [name:Bytes] [sloc:qoaconv.ads:71]: bool
  
  val bytes__rec__is_moved__  [sloc:qoaconv.ads:71]: bool

end

(* Module for defining a ref holding the value of variable "p" defined at qoaconv.ads:72, created in Gnat2Why.Decls.Translate_Variable *)
module Qoaconv__qoa_encode_header__p
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.BV32
  
  val p [model_trace:3575] [model_projected]
  [name:P] [sloc:qoaconv.ads:72]: _gnatprove_standard.BV32.t

end

(* Module giving axioms for type "unsigned_32" defined at interfac.ads:80, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__unsigned_32___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.BV32
  use        Interfaces__unsigned_32
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_276) : _gnatprove_standard.BV32.t
    ([mlw:proxy_symbol] [introduced] temp___is_init_272) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_273) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_274) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_275) : bool) requires
    { True } ensures  { True } returns
     = (Interfaces__unsigned_32.dynamic_property
          Interfaces__unsigned_32.first Interfaces__unsigned_32.last
          ([mlw:proxy_symbol] [introduced] temp___expr_276))

end

(* Module for axiomatizing the pointer theory associated to type "bytes_char_acc" defined at qoaconv.ads:37, created in Why.Gen.Pointers.Create_Rep_Pointer_Theory_If_Needed *)
module Qoaconv__bytes_char_acc__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Qoaconv__bytes_char
  
  type __rep  = { [model_trace:'Is_Null]rec__qoaconv__bytes_char_acc__is_null_pointer : bool;
                  rec__qoaconv__bytes_char_acc__is_moved : bool;
                  [model_trace:'All]rec__qoaconv__bytes_char_acc__pointer_value : Qoaconv__bytes_char.bytes_char }
  
  function [model_trace:'Is_Null] 
    __rep_rec__qoaconv__bytes_char_acc__is_null_pointer__projection
    (a : __rep) requires {  } ensures  {  } returns
    bool = a.rec__qoaconv__bytes_char_acc__is_null_pointer
  
  meta model_projection function __rep_rec__qoaconv__bytes_char_acc__is_null_pointer__projection
  
  meta inline:no function __rep_rec__qoaconv__bytes_char_acc__is_null_pointer__projection
  
  function   __rep_rec__qoaconv__bytes_char_acc__is_moved__projection
    (a : __rep) requires {  } ensures  {  } returns
    bool = a.rec__qoaconv__bytes_char_acc__is_moved
  
  meta model_projection function __rep_rec__qoaconv__bytes_char_acc__is_moved__projection
  
  meta inline:no function __rep_rec__qoaconv__bytes_char_acc__is_moved__projection
  
  function [model_trace:'All] 
    __rep_rec__qoaconv__bytes_char_acc__pointer_value__projection (a : __rep)
    requires {  } ensures  {  } returns
    Qoaconv__bytes_char.bytes_char = a.rec__qoaconv__bytes_char_acc__pointer_value
  
  meta model_projection function __rep_rec__qoaconv__bytes_char_acc__pointer_value__projection
  
  meta inline:no function __rep_rec__qoaconv__bytes_char_acc__pointer_value__projection
  
  type __rep__ref  = { mutable __rep__content : __rep }
  
  function   __rep__ref___rep__content__projection (a : __rep__ref) requires
    {  } ensures  {  } returns __rep = a.__rep__content
  
  meta model_projection function __rep__ref___rep__content__projection
  
  meta inline:no function __rep__ref___rep__content__projection
  
  function   __rep__havoc (x : __rep__ref) requires {  } ensures  {  }
    returns unit
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = ((a.rec__qoaconv__bytes_char_acc__is_null_pointer
               = b.rec__qoaconv__bytes_char_acc__is_null_pointer) /\
              (if
              (not (a.rec__qoaconv__bytes_char_acc__is_null_pointer = True))
              then
              (a.rec__qoaconv__bytes_char_acc__pointer_value
                 = b.rec__qoaconv__bytes_char_acc__pointer_value)
              ))
  
  function   rec__qoaconv__bytes_char_acc__pointer_value__pred (a : __rep)
    requires { True } ensures  { True } returns
     = (not a.rec__qoaconv__bytes_char_acc__is_null_pointer)
  
  function   __null_pointer () requires {  } ensures  {  } returns __rep
  
  axiom __null_pointer__def_axiom (function __null_pointer) : (__null_pointer.rec__qoaconv__bytes_char_acc__is_null_pointer
                                                                 = True)
  
  function   rec__qoaconv__bytes_char_acc__pointer_value_ (a : __rep)
    requires { (rec__qoaconv__bytes_char_acc__pointer_value__pred a) }
    ensures  { (result = a.rec__qoaconv__bytes_char_acc__pointer_value) }
    returns Qoaconv__bytes_char.bytes_char
  
  function   assign_null_check_ (a : __rep) requires
    { (rec__qoaconv__bytes_char_acc__pointer_value__pred a) } ensures 
    { (result = a) } returns __rep
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a

end

(* Module for axiomatizing type "bytes_char_acc" defined at qoaconv.ads:37, created in Gnat2Why.Types.Translate_Type *)
module Qoaconv__bytes_char_acc
  
  use export Qoaconv__bytes_char_acc__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use        Qoaconv__bytes_char_acc__rep
  
  type bytes_char_acc  = __rep
  
  function   dummy () requires {  } ensures  {  } returns bytes_char_acc
  
  type bytes_char_acc__ref  = { mutable bytes_char_acc__content : bytes_char_acc }
  
  function   bytes_char_acc__ref_bytes_char_acc__content__projection
    (a : bytes_char_acc__ref) requires {  } ensures  {  } returns
    bytes_char_acc = a.bytes_char_acc__content
  
  meta model_projection function bytes_char_acc__ref_bytes_char_acc__content__projection
  
  meta inline:no function bytes_char_acc__ref_bytes_char_acc__content__projection
  
  function   bytes_char_acc__havoc (x : bytes_char_acc__ref) requires {  }
    ensures  {  } returns unit

end

(* Module giving axioms for type "bytes_char_acc" defined at qoaconv.ads:37, created in Gnat2Why.Types.Generate_Type_Completion *)
module Qoaconv__bytes_char_acc___axiom
  
  use export Qoaconv__bytes_char_acc__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__natural
  use        Qoaconv__bytes_char
  use        Qoaconv__bytes_char_acc
  use        Qoaconv__bytes_char_acc__rep
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_316) : Qoaconv__bytes_char_acc.bytes_char_acc
    ([mlw:proxy_symbol] [introduced] temp___is_init_312) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_313) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_314) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_315) : bool) requires
    { True } ensures  { True } returns
     = ((if (([mlw:proxy_symbol] [introduced] temp___is_init_312) = True)
        then
        (not (([mlw:proxy_symbol]
                [introduced] temp___expr_316).Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_null_pointer
                = True))
        ) /\
          (if
          (not (([mlw:proxy_symbol]
                  [introduced] temp___expr_316).Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_null_pointer
                  = True))
          then
          (if (False = True) then True  else
          (Qoaconv__bytes_char.dynamic_property Standard__natural.first
             Standard__natural.last
             (Qoaconv__bytes_char.first ([mlw:proxy_symbol]
                [introduced] temp___expr_316).Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value)
             (Qoaconv__bytes_char.last ([mlw:proxy_symbol]
                [introduced] temp___expr_316).Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value)))
          ))

end

(* Module for declaring a program function (and possibly an axiom) for "qoa_write_u64" defined at qoaconv.ads:74, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Qoaconv__qoa_write_u64___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.BV32
  use        _gnatprove_standard.BV64
  use        Qoaconv__bytes_char
  use        Interfaces__unsigned_32___axiom
  use        Qoaconv__bytes_char_acc
  use        Qoaconv__bytes_char_acc___axiom
  
  function   qoa_write_u64
    (param__v : _gnatprove_standard.BV64.t
    param__bytes__pointer_value : Qoaconv__bytes_char.bytes_char__ref
    param__bytes__is_null_pointer : bool__ref
    param__bytes__rec__is_moved__ : bool__ref
    param__p : _gnatprove_standard.BV32.t__ref) requires
    { ((([GP_Pretty_Ada:3600] ((let ([mlw:proxy_symbol]
                                 [introduced] temp___375) =
                                 ( {Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value : !param__bytes__pointer_value;
                                   Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_null_pointer : !param__bytes__is_null_pointer;
                                   Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_moved : !param__bytes__rec__is_moved__}).Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value
                                 in
                                 (Qoaconv__bytes_char.first
                                    ([mlw:proxy_symbol]
                                    [introduced] temp___375)))
                                 <= (let ([mlw:proxy_symbol]
                                 [introduced] temp___376) =
                                 ( {Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value : !param__bytes__pointer_value;
                                   Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_null_pointer : !param__bytes__is_null_pointer;
                                   Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_moved : !param__bytes__rec__is_moved__}).Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value
                                 in
                                 (Qoaconv__bytes_char.last
                                    ([mlw:proxy_symbol]
                                    [introduced] temp___376))))) /\
          ([GP_Pretty_Ada:3606] (_gnatprove_standard.BV32.uge !param__p
                                   (_gnatprove_standard.BV32.of_int
                                      (let ([mlw:proxy_symbol]
                                      [introduced] temp___377) =
                                      ( {Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value : !param__bytes__pointer_value;
                                        Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_null_pointer : !param__bytes__is_null_pointer;
                                        Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_moved : !param__bytes__rec__is_moved__}).Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value
                                      in
                                      (Qoaconv__bytes_char.first
                                         ([mlw:proxy_symbol]
                                         [introduced] temp___377))))))) /\
         ([GP_Pretty_Ada:3614] (_gnatprove_standard.BV32.ule !param__p
                                  (_gnatprove_standard.BV32.of_int
                                     ((let ([mlw:proxy_symbol]
                                        [introduced] temp___378) =
                                        ( {Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value : !param__bytes__pointer_value;
                                          Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_null_pointer : !param__bytes__is_null_pointer;
                                          Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_moved : !param__bytes__rec__is_moved__}).Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value
                                        in
                                        (Qoaconv__bytes_char.last
                                           ([mlw:proxy_symbol]
                                           [introduced] temp___378))) - 8))))) }
    ensures 
    { ((!param__p = (_gnatprove_standard.BV32.add (at old !param__p) 8)) /\
         (((Qoaconv__bytes_char_acc___axiom.dynamic_invariant
              {Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value : !param__bytes__pointer_value;
              Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_null_pointer : !param__bytes__is_null_pointer;
              Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_moved : !param__bytes__rec__is_moved__}
              True True True True) /\
             (Interfaces__unsigned_32___axiom.dynamic_invariant !param__p
                True True True True)) /\ True /\ True)) } returns unit

end

(* Module giving axioms for type "qoa_description" defined at qoaconv.ads:28, created in Gnat2Why.Types.Generate_Type_Completion *)
module Qoaconv__qoa_description___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Qoaconv__qoa_description
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_283) : Qoaconv__qoa_description.qoa_description
    ([mlw:proxy_symbol] [introduced] temp___is_init_279) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_280) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_281) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_282) : bool) requires
    { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__natural
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_46) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_42) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_43) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_44) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_45) : bool) requires
    { True } ensures  { True } returns
     = (Standard__natural.dynamic_property Standard__natural.first
          Standard__natural.last ([mlw:proxy_symbol]
          [introduced] temp___expr_46))

end

(* Module giving axioms for type "qoa_lms_t" defined at qoaconv.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Qoaconv__qoa_lms_t___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Qoaconv__qoa_lms_t
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_239) : Qoaconv__qoa_lms_t.qoa_lms_t
    ([mlw:proxy_symbol] [introduced] temp___is_init_235) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_236) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_237) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_238) : bool) requires
    { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "integer_16" defined at interfac.ads:50, created in Gnat2Why.Types.Generate_Type_Completion *)
module Interfaces__integer_16___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Interfaces__integer_16
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_191) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_187) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_188) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_189) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_190) : bool) requires
    { True } ensures  { True } returns
     = (Interfaces__integer_16.dynamic_property Interfaces__integer_16.first
          Interfaces__integer_16.last ([mlw:proxy_symbol]
          [introduced] temp___expr_191))

end

(* Module giving axioms for type "history_t" defined at qoaconv.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Qoaconv__history_t___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Interfaces__integer_16
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_198) : Array__Int__Interfaces__integer_16.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_194) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_195) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_196) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_197) : bool) requires
    { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "weights_t" defined at qoaconv.ads:15, created in Gnat2Why.Types.Generate_Type_Completion *)
module Qoaconv__weights_t___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Interfaces__integer_16
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_208) : Array__Int__Interfaces__integer_16.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_204) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_205) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_206) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_207) : bool) requires
    { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "lms_t" defined at qoaconv.ads:26, created in Gnat2Why.Types.Generate_Type_Completion *)
module Qoaconv__lms_t___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Array__Int__Qoaconv__qoa_lms_t
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_260) : Array__Int__Qoaconv__qoa_lms_t.map
    ([mlw:proxy_symbol] [introduced] temp___is_init_256) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_257) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_258) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_259) : bool) requires
    { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "unsigned_char" defined at qoaconv.ads:35, created in Gnat2Why.Types.Generate_Type_Completion *)
module Qoaconv__unsigned_char___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.BV8
  use        Qoaconv__unsigned_char
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_303) : _gnatprove_standard.BV8.t
    ([mlw:proxy_symbol] [introduced] temp___is_init_299) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_300) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_301) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_302) : bool) requires
    { True } ensures  { True } returns
     = (Qoaconv__unsigned_char.dynamic_property Qoaconv__unsigned_char.first
          Qoaconv__unsigned_char.last ([mlw:proxy_symbol]
          [introduced] temp___expr_303))

end

(* Module giving axioms for type "bytes_char" defined at qoaconv.ads:36, created in Gnat2Why.Types.Generate_Type_Completion *)
module Qoaconv__bytes_char___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        Standard__natural
  use        Qoaconv__bytes_char
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_310) : Qoaconv__bytes_char.bytes_char
    ([mlw:proxy_symbol] [introduced] temp___is_init_306) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_307) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_308) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_309) : bool) requires
    { True } ensures  { True } returns
     = (if
       (([mlw:proxy_symbol] [introduced] temp___skip_constant_307) = True)
       then True  else
       (Qoaconv__bytes_char.dynamic_property Standard__natural.first
          Standard__natural.last
          (Qoaconv__bytes_char.first ([mlw:proxy_symbol]
             [introduced] temp___expr_310))
          (Qoaconv__bytes_char.last ([mlw:proxy_symbol]
             [introduced] temp___expr_310))))

end

(* Module for checking contracts and absence of run-time errors in subprogram "qoa_encode_header" defined at qoaconv.ads:70, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Qoaconv__qoa_encode_header__subprogram_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.BV32
  use        _gnatprove_standard.BV64
  use        _gnatprove_standard.BVConv_32_64
  use        Qoaconv__qoa_description
  use        Qoaconv__qoa_encode_header__qoa_desc
  use        Qoaconv__qoa_encode_header__bytes
  use        Qoaconv__bytes_char
  use        Qoaconv__qoa_encode_header__p
  use        Qoaconv__qoa_write_u64___axiom
  use        Qoaconv__qoa_description___axiom
  use        Interfaces__unsigned_32
  use        Interfaces__unsigned_32___axiom
  use        Interfaces__unsigned_32__rep
  use        Qoaconv__bytes_char_acc
  use        Qoaconv__bytes_char_acc___axiom
  use import int.Int
  use        _gnatprove_standard.BV8
  use        _gnatprove_standard.BV32
  use        _gnatprove_standard.BV64
  use        _gnatprove_standard.BVConv_32_64
  use        Standard__integer
  use        Standard__natural
  use        Standard__natural___axiom
  use        Standard__integer__rep
  use        Qoaconv__qoa_description
  use        Qoaconv__qoa_encode_header__qoa_desc
  use        Qoaconv__qoa_encode_header__bytes
  use        Qoaconv__bytes_char
  use        Qoaconv__qoa_encode_header__p
  use        Qoaconv__qoa_write_u64___axiom
  use        Qoaconv__qoa_lms_t
  use        Qoaconv__qoa_lms_t___axiom
  use        Qoaconv__qoa_description___axiom
  use        Interfaces__integer_16
  use        Interfaces__integer_16___axiom
  use        Interfaces__integer_16__rep
  use        Array__Int__Interfaces__integer_16
  use        Qoaconv__history_t
  use        Qoaconv__history_t___axiom
  use        Qoaconv__weights_t
  use        Qoaconv__weights_t___axiom
  use        Qoaconv__qoa_lms_t__rep
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Qoaconv__qoa_lms_t
  use        Qoaconv__lms_t
  use        Qoaconv__lms_t___axiom
  use        Interfaces__unsigned_32
  use        Interfaces__unsigned_32___axiom
  use        Interfaces__unsigned_32__rep
  use        Qoaconv__qoa_description__rep
  use        Array__Int__Qoaconv__qoa_lms_t
  use        Array__Int__Qoaconv__qoa_lms_t
  use        Array__Int__Qoaconv__qoa_lms_t
  use        Array__Int__Qoaconv__qoa_lms_t
  use        Qoaconv__unsigned_char
  use        Qoaconv__unsigned_char___axiom
  use        Qoaconv__unsigned_char__rep
  use        Array__Int__Qoaconv__unsigned_char
  use        Qoaconv__bytes_char___axiom
  use        Qoaconv__bytes_char_acc
  use        Qoaconv__bytes_char_acc___axiom
  use        Qoaconv__bytes_char_acc__rep
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Interfaces__integer_16
  use        Array__Int__Qoaconv__qoa_lms_t
  use        Qoaconv__bytes_char_acc__rep
  
  function  [sloc:qoaconv.ads:70] def (__void_param : unit) requires { True }
    ensures  {  } returns
     = (* Assume dynamic invariants of inputs of the subprogram qoaconv.ads:70 *);
        assume
        { (Qoaconv__qoa_description___axiom.dynamic_invariant
             Qoaconv__qoa_encode_header__qoa_desc.qoa_desc True False True
             True) };
        assume
        { (Qoaconv__bytes_char_acc___axiom.dynamic_invariant
             {Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value : !Qoaconv__qoa_encode_header__bytes.bytes__pointer_value;
             Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_null_pointer : !Qoaconv__qoa_encode_header__bytes.bytes__is_null_pointer;
             Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_moved : !Qoaconv__qoa_encode_header__bytes.bytes__rec__is_moved__}
             False False True True) };
        assume
        { (Interfaces__unsigned_32___axiom.dynamic_invariant
             !Qoaconv__qoa_encode_header__p.p True False True True) };
        (* Assume moved pointers in outputs of the subprogram qoaconv.ads:70 *);
        (* Check for RTE in the Pre of the subprogram qoaconv.ads:70 *);
        abstract ensures
        { True } begin  (let _ = True in ())  end;
        (* Assume Pre of the subprogram qoaconv.ads:70 *);
        (try
        ();
          ([sloc:qoaconv.adb:347] ());
          ([sloc:qoaconv.adb:346] ());
          ([sloc:qoaconv.adb:346] (let ([mlw:proxy_symbol]
          [introduced] temp___compl_737) =
          ( {Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__pointer_value : !Qoaconv__qoa_encode_header__bytes.bytes__pointer_value;
            Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_null_pointer : !Qoaconv__qoa_encode_header__bytes.bytes__is_null_pointer;
            Qoaconv__bytes_char_acc.rec__qoaconv__bytes_char_acc__is_moved : !Qoaconv__qoa_encode_header__bytes.bytes__rec__is_moved__})
          in (let ([mlw:proxy_symbol] [introduced] temp___compl_738) =
          !Qoaconv__qoa_encode_header__p.p in
          ( any --pp_effects NOT IMPLEMENTED pre {} post {} return unit);
          ([sloc:qoaconv.adb:346] ([GP_Shape:call_qoa_write_u64]
                                  [GP_Check:0:VC_PRECONDITION:qoaconv.adb:346:7]
                                  [vc:annotation] (Qoaconv__qoa_write_u64___axiom.qoa_write_u64
                                                     ( (_gnatprove_standard.BV64.bw_or
                                                          8173858939415298048
                                                          (_gnatprove_standard.BVConv_32_64.toBig
                                                             (Interfaces__unsigned_32__rep.to_rep
                                                                ( Qoaconv__qoa_encode_header__qoa_desc.qoa_desc).Qoaconv__qoa_description.__split_fields.Qoaconv__qoa_description.rec__qoaconv__qoa_description__samples))))
                                                     Qoaconv__qoa_encode_header__bytes.bytes__pointer_value
                                                     Qoaconv__qoa_encode_header__bytes.bytes__is_null_pointer
                                                     Qoaconv__qoa_encode_header__bytes.bytes__rec__is_moved__
                                                     Qoaconv__qoa_encode_header__p.p)));
          ())));
        raise Return__exc with | Return__exc  -> ());
    abstract ensures { True } begin  (let _ = True in ())  end

end
